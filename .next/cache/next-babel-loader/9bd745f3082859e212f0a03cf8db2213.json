{"ast":null,"code":"/*\n  canvas进阶——如何画出平滑的曲线: https://juejin.im/post/5bc1a3f6f265da0ad947f4b1\n*/\nclass Wave {\n  constructor(ctx, w, h, delay = 0) {\n    this.ctx = void 0;\n    this.currentTime = void 0;\n    this.t = void 0;\n    this.step = void 0;\n    this.a = void 0;\n    this.stepsPreCicle = void 0;\n    this.stepsPreSecond = void 0;\n    this.d = void 0;\n    this.w = void 0;\n    this.h = void 0;\n    this.delay = void 0;\n    this.ctx = ctx;\n    this.currentTime = Date.now();\n    this.t = 0;\n    this.step = w / 50; // 振幅\n\n    this.a = 50; // 垂直位移\n\n    this.d = 20;\n    this.stepsPreSecond = 2; // 每个周期多少step\n\n    this.stepsPreCicle = 5; // canvas容器宽高\n\n    this.w = w;\n    this.h = h;\n    this.delay = delay;\n  }\n\n  caculate(x, delay = 0) {\n    /*\n      正弦余弦函数 https://www.shuxuele.com/algebra/amplitude-period-frequency-phase-shift.html\n    */\n    // const amplitude = this.a;\n    const AngularV = 2 * Math.PI / this.stepsPreCicle;\n    const stepsPreSecond = this.stepsPreSecond;\n    const amplitude = this.a;\n    return amplitude * Math.sin(AngularV * (x + stepsPreSecond * this.t + delay));\n  }\n\n  render() {\n    this.t = (Date.now() - this.currentTime) / 1000;\n    const ctx = this.ctx;\n    const h = this.h;\n    const w = this.w;\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(0, h / 2);\n    ctx.lineWidth = 1;\n    ctx.moveTo(0, 0);\n    let currentNode = null,\n        nextNode = null;\n\n    for (let i = this.step; i < w; i += this.step) {\n      if (i === this.step) {\n        currentNode = [i, this.caculate(i)];\n        nextNode = [i + this.step, this.caculate(i + this.step)];\n      } else {\n        currentNode = nextNode;\n        nextNode = [i + this.step, this.caculate(i + this.step)];\n      }\n\n      const computedNode = [(currentNode[0] + nextNode[0]) / 2, (currentNode[1] + nextNode[1]) / 2];\n      ctx.quadraticCurveTo(currentNode[0], currentNode[1], computedNode[0], computedNode[1]);\n    }\n\n    ctx.lineTo(w, this.caculate(w));\n    ctx.lineTo(w, h);\n    ctx.lineTo(0, h);\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  render2() {\n    this.t = (Date.now() - this.currentTime) / 1000;\n    const ctx = this.ctx;\n    const h = this.h;\n    const w = this.w;\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(0, h / 2);\n    ctx.lineWidth = 1;\n    ctx.moveTo(0, 0);\n    let currentNode = null,\n        nextNode = null;\n\n    for (let i = this.step; i < w; i += this.step) {\n      if (i === this.step) {\n        currentNode = [i, this.caculate(i, this.stepsPreCicle / 2)];\n        nextNode = [i + this.step, this.caculate(i + this.step, this.stepsPreCicle / 2)];\n      } else {\n        currentNode = nextNode;\n        nextNode = [i + this.step, this.caculate(i + this.step, this.stepsPreCicle / 2)];\n      }\n\n      const computedNode = [(currentNode[0] + nextNode[0]) / 2, (currentNode[1] + nextNode[1]) / 2];\n      ctx.quadraticCurveTo(currentNode[0], currentNode[1], computedNode[0], computedNode[1]);\n    }\n\n    ctx.lineTo(w, this.caculate(w, this.stepsPreCicle / 2));\n    ctx.lineTo(w, h);\n    ctx.lineTo(0, h);\n    ctx.fillStyle = 'rgba(193, 193, 193, 0.4)';\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  renderBoth() {\n    this.ctx.clearRect(0, 0, this.w, this.h);\n    this.render();\n    this.render2();\n    requestAnimationFrame(this.renderBoth.bind(this));\n  }\n\n  animate() {\n    this.renderBoth();\n  }\n\n}\n\nexport default Wave;","map":{"version":3,"sources":["/Users/iwsr/myCode/works/myself/blog/blog-front/src/pages/index/util/wave.ts"],"names":["Wave","constructor","ctx","w","h","delay","currentTime","t","step","a","stepsPreCicle","stepsPreSecond","d","Date","now","caculate","x","AngularV","Math","PI","amplitude","sin","render","save","beginPath","translate","lineWidth","moveTo","currentNode","nextNode","i","computedNode","quadraticCurveTo","lineTo","fillStyle","fill","closePath","restore","render2","renderBoth","clearRect","requestAnimationFrame","bind","animate"],"mappings":"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","sourcesContent":["/*\n  canvas进阶——如何画出平滑的曲线: https://juejin.im/post/5bc1a3f6f265da0ad947f4b1\n*/\nclass Wave {\n  private ctx: any\n  private currentTime: number\n  private t: number\n  private step: number\n  private a: number\n  private stepsPreCicle: number\n  private stepsPreSecond: number\n  private d: number\n  private w: number\n  private h: number\n  private delay: number\n  constructor(ctx: any, w: number, h: number, delay: number = 0) {\n    this.ctx = ctx;\n    this.currentTime = Date.now();\n    this.t = 0;\n    this.step = w / 50;\n    // 振幅\n    this.a = 50;\n    // 垂直位移\n    this.d = 20;\n    this.stepsPreSecond = 2;\n    // 每个周期多少step\n    this.stepsPreCicle = 5;\n    // canvas容器宽高\n    this.w = w;\n    this.h = h;\n    this.delay = delay;\n  }\n  caculate(x: number, delay: number = 0):number {\n    /*\n      正弦余弦函数 https://www.shuxuele.com/algebra/amplitude-period-frequency-phase-shift.html\n    */\n    // const amplitude = this.a;\n    const AngularV = (2 * Math.PI) / this.stepsPreCicle;\n    const stepsPreSecond = this.stepsPreSecond;\n    const amplitude = this.a;\n    return amplitude * Math.sin( AngularV * (x + stepsPreSecond * this.t + delay) );\n  }\n  render() {\n    this.t = (Date.now() - this.currentTime) / 1000;\n    const ctx = this.ctx;\n    const h = this.h;\n    const w = this.w;\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(0, h / 2);\n    ctx.lineWidth = 1;\n    ctx.moveTo(0, 0);\n    let currentNode: any = null, nextNode: any = null;\n    for (let i = this.step; i < w; i += this.step) {\n      if (i === this.step) {\n        currentNode = [i, this.caculate(i)];\n        nextNode = [i + this.step, this.caculate(i + this.step)];\n      } else {\n        currentNode = nextNode;\n        nextNode = [i + this.step, this.caculate(i + this.step)];\n      }\n      const computedNode = [(currentNode[0] + nextNode[0]) / 2, (currentNode[1] + nextNode[1]) / 2];\n      ctx.quadraticCurveTo(currentNode[0], currentNode[1], computedNode[0], computedNode[1]);\n    }\n    ctx.lineTo(w, this.caculate(w));\n    ctx.lineTo(w, h);\n    ctx.lineTo(0, h);\n    ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  render2() {\n    this.t = (Date.now() - this.currentTime) / 1000;\n    const ctx = this.ctx;\n    const h = this.h;\n    const w = this.w;\n    ctx.save();\n    ctx.beginPath();\n    ctx.translate(0, h / 2);\n    ctx.lineWidth = 1;\n    ctx.moveTo(0, 0);\n    let currentNode: any = null, nextNode: any = null;\n    for (let i = this.step; i < w; i += this.step) {\n      if (i === this.step) {\n        currentNode = [i, this.caculate(i, this.stepsPreCicle / 2)];\n        nextNode = [i + this.step, this.caculate(i + this.step, this.stepsPreCicle / 2)];\n      } else {\n        currentNode = nextNode;\n        nextNode = [i + this.step, this.caculate(i + this.step, this.stepsPreCicle / 2)];\n      }\n      const computedNode = [(currentNode[0] + nextNode[0]) / 2, (currentNode[1] + nextNode[1]) / 2];\n      ctx.quadraticCurveTo(currentNode[0], currentNode[1], computedNode[0], computedNode[1]);\n    }\n    ctx.lineTo(w, this.caculate(w, this.stepsPreCicle / 2));\n    ctx.lineTo(w, h);\n    ctx.lineTo(0, h);\n    ctx.fillStyle = 'rgba(193, 193, 193, 0.4)';\n    ctx.fill();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  renderBoth() {\n    this.ctx.clearRect(0, 0, this.w, this.h);\n    this.render();\n    this.render2();\n    requestAnimationFrame(this.renderBoth.bind(this));\n  }\n\n  animate() {\n    this.renderBoth();\n  }\n}\n\nexport default Wave;\n"]},"metadata":{},"sourceType":"module"}